<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RyLand]]></title>
  <link href="http://ryalnd.github.com/atom.xml" rel="self"/>
  <link href="http://ryalnd.github.com/"/>
  <updated>2012-09-27T16:47:18-05:00</updated>
  <id>http://ryalnd.github.com/</id>
  <author>
    <name><![CDATA[Ryland Herrick]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Turnip Helpers]]></title>
    <link href="http://ryalnd.github.com/blog/2012/09/14/turnip-helpers/"/>
    <updated>2012-09-14T18:26:00-05:00</updated>
    <id>http://ryalnd.github.com/blog/2012/09/14/turnip-helpers</id>
    <content type="html"><![CDATA[<p>So today was a growth day for me at bendyworks. I started the day working on <a href="https://github.com/ryalnd/bendylunch">bendylunch</a>.</p>

<p>Bendylunch uses <a href="https://github.com/jnicklas/turnip">turnip</a>, which we&#8217;ve been using (and enjoying) as an alternative to cucumber. We also tried poltergeist/cucumber briefly, but it seems a bit immature to be a replacement right now.</p>

<p>Anyway, I was writing some acceptance tests, and decided to write a bash function to run them for me. And then the day was over.</p>

<p>It ended with a few coderwall <a href="http://coderwall.com/p/u/ryalnd">protips</a>, outlining what I ended up with. I&#8217;m particularly happy with the <a href="http://coderwall.com/p/buxyuw">first</a>. The <a href="http://coderwall.com/p/senquw">second</a>, not so much (it works, but it&#8217;s not very clean).</p>

<p>I really need to get more of my dotfiles out on the <a href="https://github.com/ryalnd/dotfiles">repo</a>. I realize that no one <em>really</em> cares, but I feel bad for withholding information regardless.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Respond With An Explanation]]></title>
    <link href="http://ryalnd.github.com/blog/2012/06/24/respond-with-an-explanation/"/>
    <updated>2012-06-24T16:52:00-05:00</updated>
    <id>http://ryalnd.github.com/blog/2012/06/24/respond-with-an-explanation</id>
    <content type="html"><![CDATA[<p>Hey, I wrote about some things I recently learned about Devise and Rails 3.</p>

<p>It&#8217;s posted on the <a href="http://bendyworks.com/geekville">bendyworks blog</a>. You should <a href="http://bendyworks.com/geekville/tutorials/2012/6/respond-with-an-explanation">check it out</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Heroku Accounts and git]]></title>
    <link href="http://ryalnd.github.com/blog/2012/04/27/multiple-heroku-accounts-and-git/"/>
    <updated>2012-04-27T16:49:00-05:00</updated>
    <id>http://ryalnd.github.com/blog/2012/04/27/multiple-heroku-accounts-and-git</id>
    <content type="html"><![CDATA[<p>I was recently trying to deploy a heroku instance for some testing. I hadn&#8217;t done any work on heroku in a while, and ended up getting stuck on a credentials issue.</p>

<p>While I had successfully done a <code>$ gem install heroku &amp;&amp; heroku create --stack cedar</code>, I got the following error when trying to do a <code>$ git push heroku master</code> to get things up and running:</p>

<pre><code>!  Your key with fingerprint 09:84:27:65:48:de:b4:48:fe:64:25:d8:dd:55:d8:db
is not authorized to access evening-snow-7878.

fatal: The remote end hung up unexpectedly
</code></pre>

<p>Hmm.  That looked like an ssh issue to me. A quick <code>$ ssh-keygen -l</code> of a few of my keys told me that it was using the &#8216;wrong one,&#8217; which was my default ssh key.</p>

<p>Looking at <code>$ heroku keys</code> didn&#8217;t help; it was using the correct key. So the issue was with my ssh config, not the heroku gem or its configuration.</p>

<p>I quickly tried to add an entry to my <code>~/.ssh/config</code> file, along the lines of</p>

<pre><code>Host heroku.com
  IdentityFile ~/.ssh/the_key_you_want
</code></pre>

<p>But I still got the same error: it was still using the wrong key. I did some quick googling and couldn&#8217;t find a good answer.  I eventually stumbled on this <a href="https://github.com/ddollar/heroku-accounts">excellent heroku plugin</a> that does exactly what I was looking for.</p>

<p>However, if you aren&#8217;t using many accounts, and don&#8217;t want to type a command in each terminal session, here&#8217;s what it&#8217;s doing under the covers (and what I ended up doing):</p>

<ol>
<li><p>Add something like the following to your <code>~/.ssh/config</code> file:</p>

<pre><code>Host heroku.app_name
  HostName heroku.com
  IdentityFile ~/.ssh/the_key_you_want
  IdentitiesOnly yes
</code></pre></li>
<li><p>Add a remote to your repo using that host:</p>

<pre><code>$ git remote add heroku git@heroku.app_name:app_name.git
</code></pre></li>
</ol>


<p>That should be it. Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Pages]]></title>
    <link href="http://ryalnd.github.com/blog/2012/04/08/github-pages/"/>
    <updated>2012-04-08T19:59:00-05:00</updated>
    <id>http://ryalnd.github.com/blog/2012/04/08/github-pages</id>
    <content type="html"><![CDATA[<p>I haven&#8217;t posted anything in a while. I won&#8217;t make excuses, that&#8217;s just the way it is.</p>

<p>If you hadn&#8217;t noticed, the blog is no longer WordPress, nor is it hosted on my Linode. A few weeks ago, during <a href="http://bendyworks.com">bendyworks</a>&#8217; amazing growth days (which will be described in a future post), I converted my blog entries to <a href="https://github.com/mojombo/jekyll">jekyll</a>-formatted YAML and markdown. This was actually the hardest part of the process. I won&#8217;t go into details, but it involved piping my WordPress-exported posts through a Rube-Goldbergesque series of Python libraries.</p>

<p>With my old posts converted, I then got an <a href="http://octopress.org">octopress</a> repository set up on GitHub, using their super-cool <a href="http://pages.github.com">Pages</a> functionality for hosting and super-easy deployment. The whole process is very slick, and requires much, much less effort, maintenance, money, and disk space than my former methods.</p>

<p>I&#8217;ll be tweaking the look and content in the weeks to come; I just wanted to give an update (mostly so that my newest post wasn&#8217;t a year old).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Life: Upgraded.]]></title>
    <link href="http://ryalnd.github.com/blog/2011/08/05/life-upgraded/"/>
    <updated>2011-08-05T19:18:59-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/08/05/life-upgraded</id>
    <content type="html"><![CDATA[<p>Hoo boy.  A lot has changed in the past few weeks.  After spending about a month looking for jobs and apartments in Milwaukee, we finally found both.  We found the perfect apartment, and I accepted a job offer for an awesome Django startup in Spreenkler&#8217;s Accelerator program.  The day after I said yes to the job, I was approached with an offer here in Madison.  While both were amazing jobs, I ended up taking the job here in Madison as I felt it had more to offer, experientially.  Starting at the end of August, I&#8217;ll be an official <a href="http://bendyworks.com/">Bendyworker</a>.</p>

<p>Of course, this means that the time Amanda and I spent planning for Milwaukee was basically for naught.  I&#8217;ve got an amazing job, but we&#8217;re back to square one apartment-wise.  I&#8217;ve moved every year since 2005; I&#8217;m ready to buy a house out of sheer laziness.</p>

<p>Speaking of laziness, I&#8217;ve been working day and night on our startup, <a href="http://jungolhq.com">Jungol</a>.  We just launched our alpha tonight, after much internal tinkering.  I&#8217;ve read time and again that the best thing you can do is just put your project out there, so it&#8217;s something of a relief to finally have done so.  Check it out at <a href="http://jng.li/qJ338J">http://jng.li/qJ338J</a>.</p>

<p>There&#8217;s a lot of smaller things that still need to be done, but most everything&#8217;s there right now.  We&#8217;ve got our proof of concept; the rest is up to the public (who told us they wanted this, we swear).  It&#8217;s an exciting time and I&#8217;m proud to be a part of the whole thing.  Having written the entire site save for design, it&#8217;s becoming like a child to me, but I&#8217;m trying my best not to become too emotionally attached.</p>

<p>Our final frisbee game is next Tuesday.   Our <em>championship</em> frisbee game, that is.  This last week was playoffs, and we won both games.  I&#8217;m pretty proud of the team; we had a lot of beginners, some who&#8217;d never even played a team sport before, but we&#8217;ve come together and are playing amazingly well.  Playing with the same team every year is comforting, I&#8217;m sure, but there&#8217;s something to be said for this amazing transition from &#8216;group of people&#8217; to &#8216;team&#8217; over the course of a season.  Remind me to let you know if we won or not.</p>

<p>So I&#8217;ve got a great job and a great girlfriend.  Let me know if you see any great apartments for rent around town.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Work vs. Not-Work]]></title>
    <link href="http://ryalnd.github.com/blog/2011/07/01/work-vs-not-work/"/>
    <updated>2011-07-01T18:58:40-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/07/01/work-vs-not-work</id>
    <content type="html"><![CDATA[<p>Oh, hey there!  It&#8217;s been so long I almost didn&#8217;t recognize you!  Yeah, I&#8217;ve been good.  Real busy with work, if you can call it &#8216;work.&#8217;  Busy regardless, though.</p>

<p>The Jungol project has been going great.   I don&#8217;t think I can overemphasize how refreshing it is.  The team, the framework, the project itself, and the freedom that I&#8217;m given are amazing.  Don&#8217;t think I&#8217;m not grateful.</p>

<p>We had a bit of an uphill climb at first, make no mistake.  We needed to take the original idea, gather a whole lot of customer feedback, and decide what was most likely to succeed given those inputs.  This brings to mind an excellent quote I saw on Twitter the other day:</p>

<blockquote><p>&#8220;Entrepreneurship is like jumping off a cliff and assembling your airplane on the way down&#8221;
&#8211; Reid Hoffman</p></blockquote>

<p>I&#8217;ve got the plane&#8217;s body and most of its engine done.  Now we get to start her up and start adding paint and decals.  I can&#8217;t wait.</p>

<p>Ditching the metaphor and returning to reality, the lady and I will be heading to Milwaukee tomorrow to look at apartments.  It&#8217;s going to be a welcome break from all the time spent staring at a terminal screen, but the overachiever in me is constantly nagging to &#8216;get back to work.&#8217;  We might stay and go to Summerfest on Sunday, depending on how my Ego feels.</p>

<p>We attended our first Concert on the Square on Wednesday, which was graciously hosted by the folks at The Firm.  They have a balcony overlooking the capitol, and were even nice enough to fill their office with food, beer, developers, entrepreneurs, and investors!  It was a fun time, to say the least.</p>

<p>Frisbee has had its ups and downs; some games we dominate, others we barely avoid a forfeit due to lack of players.  We&#8217;re not the best in the league, but we&#8217;re certainly not the worst.  Win or lose, though, we still get two free pitchers after every game. :)</p>

<p>I don&#8217;t really know what else to say right now.  Things are up in the air, and the future is uncertain, but I&#8217;m having a blast and learning every day.   I am happy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Busyness, Business]]></title>
    <link href="http://ryalnd.github.com/blog/2011/06/12/busyness-business/"/>
    <updated>2011-06-12T14:57:23-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/06/12/busyness-business</id>
    <content type="html"><![CDATA[<p>It&#8217;s been a while since I wrote anything, but I&#8217;ve been really, really busy.  Most importantly:  I <strong>quit my job to work for a startup</strong>.</p>

<p>I was approached by Steve at Spreenkler about two weeks ago.  He asked if I&#8217;d be interested in working as a developer for one of the teams in their summer <a href="http://spreenklertalentlabs.org/startup/?page_id=4">Incubator Program</a>.  My old job was incredibly understanding about the opportunity, and after a few meetings and a trip to Milwaukee I was part of Jungol, Inc.  Expect a more detailed post about the team and what I&#8217;m doing (hint: I&#8217;m <em>the</em> developer) in the near future, when I have some more time.</p>

<p>Started doing some <a href="http://4clojure.com">4Clojure</a> problems.  I thought &#8220;Hey, I&#8217;m getting it!&#8221; until I enabled Golf Mode and saw how my problems (at least length-wise) compared to others&#8217; on the site.  Rest assured that I&#8217;m working on it; I&#8217;ve got the first 25 problems done so far.</p>

<p>I added a header to the site.  Not sure if I really like it, but it adds color and I didn&#8217;t cringe upon seeing it the next day (stepping away from it for a while is always a good choice), so it&#8217;s here to stay.  I&#8217;ll be making small changes here and there, dependent on time and interest.</p>

<p>Frisbee is going good; we&#8217;re 2-1 and we finally got our sweet jerseys.
It&#8217;s been quite an ordeal trying to find an organize a team (yes, even for a &#8216;sport&#8217; like Ultimate Frisbee), but I&#8217;m pretty damn happy with the results.  I&#8217;ve been trying to organize everything on Google (Mail, Documents, Calendar) and while I created the tools for my team to use, I certainly can&#8217;t force their utilization.  Oh, well.  At least people are showing up to games (and winning them).</p>

<p>Amanda and I went to the <a href="http://www.clipsoffaith.com/">Clips of Faith</a> Tour at Olin Park on Friday, and that was a blast.  Highlights:</p>

<ul>
<li>Really good beer, relatively cheap</li>
<li>Free handlebars upon entry</li>
<li>Entry to win the New Belgium cruiser</li>
<li>Delicious vegan nachos</li>
<li>Really cool short films</li>
</ul>


<p>Lastly, I&#8217;ve finally taken the leap and bought a MacBook Pro.  While I&#8217;ve supported OS X in previous jobs I&#8217;ve never actually owned or used it.  I&#8217;m mostly using the terminal for development anyways, so work-wise it&#8217;s not that big of a jump from linux.</p>

<p>However, I&#8217;m also <strong>moving from Emacs to vim</strong>, which is a more considerable jump.  I&#8217;d used vim previously in college, but have done most of my serious programming with Emacs in the last year or two.  That&#8217;s going much better than I would have expected, though.  I don&#8217;t think I&#8217;m ready for any significant plugins right now but I&#8217;m going to be using vim from now on and see how it goes.</p>

<p>The reason for vim?  Why, my third and final paradigm shift:  I&#8217;m using Ruby on Rails as the framework for this startup project.  I spent last week learning as much as I could while getting my new workstation set up, and spent Saturday at Bendyworks for the Ruby Hack Day Meetup.  Everyone was super nice and helpful as usual; the only thing keeping me from learning more was my reluctance to speak up and ask for help.  I got a basic rails project up, and will be getting some actual guts in there this week.  The only thing I&#8217;m missing is a testing framework (I&#8217;m going to be using rspec, if any, but it&#8217;s not in there yet).  I&#8217;m currently debating whether unit testing would be reasonable at this point, given the already steep learning curve I&#8217;m facing.  I&#8217;m probably going to hold off for the first few basic features, and maybe reassess the situation in a few weeks.</p>

<p>The Ruby/Rails hurdle is going to be a huge one, as I&#8217;m quickly learning, but I&#8217;m really excited to have this opportunity.  As a consequence I&#8217;ve been doing more hacking than sleeping, and it&#8217;s really starting to catch up with me.  It&#8217;s an absolute blast, and in my mind it&#8217;s not work at all, but my body is beginning to disagree with me.</p>

<p>On that note, I think it&#8217;s time I rest my weary head a bit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quickie]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/28/quickie/"/>
    <updated>2011-05-28T18:59:57-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/28/quickie</id>
    <content type="html"><![CDATA[<p>Okay, I&#8217;m really tired but I wanted to make note of a few updates.  While I&#8217;m not naive enough to think that the built-in comment system is the reason the blog doesn&#8217;t have any comments, I realize that that could conceivably be an issue if the site actually had readers.  With that in mind, I present the new comment system, powered by <a href="http://disqus.com">Disqus</a>!</p>

<p>I finally got around to updating Wordpress this week as well.  I don&#8217;t have FTP on my server for several reasons (mainly security), so Wordpress&#8217; handy dandy auto-install isn&#8217;t an option for me (I suppose I could temporarily use it, but that&#8217;s almost as much work as just doing it manually).  It&#8217;s pretty painless since most of the files they update aren&#8217;t ones I&#8217;ve customized, but I always delay it because I fear change (and they update so damn often).</p>

<p>Made some minor style tweaks as well, probably nothing you&#8217;ll notice.  $1 to anyone that does.</p>

<p>Next week should be pretty exciting (or at least blogworthy), so stay tuned for that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Much More Exciting(er)]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/25/much-more-excitinger/"/>
    <updated>2011-05-25T17:49:12-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/25/much-more-excitinger</id>
    <content type="html"><![CDATA[<p>Oh snap.  Lots of exciting stuff happening lately.  Most publicly, I finally got some old code up on <a href="https://github.com/ryalnd">GitHub</a> a week or so ago.  &#8216;Social Coding&#8217; is such an amazingly cool concept, I deeply regret not participating sooner.  I literally get giddy when I load my dashboard.  It&#8217;s probably love.  Follow me or just lurk; I&#8217;ll be posting some more projects in the near future, and probably talking about it here.</p>

<p>In an exciting new development, Spreenkler has apparently changed their minds about the whole Zappos Gift Certificate thing (thanks to a rogue email by Devin, of which I swear I had no knowledge).  We&#8217;ve yet to receive the goods, but Steve @ <a href="http://www.spreenkler.com/">Spreenkler</a> apparently talked to the guys at Blurbs and they agreed that we could have the award.  I was dumbfounded by the kindness exhibited in that gesture; if Steve and co. are representative of the Milwaukee community, I cannot wait.</p>

<p>Going along with that, I may have been offered an amazing opportunity for the summer that could really help kick-start things for me.  I&#8217;ll give more details when things are more definite, but in the meantime I hope you&#8217;re as excited as I am.</p>

<p>In other news, I finally checked my site out in IE today and it was HORRIBLE.  I&#8217;m more generally of the stance &#8216;F*** IE users&#8217; but the overwhelming numbers and my inability to ignore a problem once it&#8217;s noticed led me to fix things up.</p>

<p>I have so much stuff I want to read, code, and watch.  There aren&#8217;t enough hours in the day. &#8216;night for now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Post]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/25/quick-post/"/>
    <updated>2011-05-25T17:23:36-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/25/quick-post</id>
    <content type="html"><![CDATA[<p>First: I started this post on Monday, but never got around to finishing it.</p>

<p>Went to the Mad Railers meetup Monday, despite my body requesting otherwise.  I figure if I don&#8217;t have the time to sit down and learn Ruby right myself right now, I should at least take advantage of these local groups.</p>

<p>The topic was testing, and while that might not be where most people would start when learning a new language (myself included), I have no doubts that it will help me in the long run.  There were a few great talks and I learned quite a bit.  I&#8217;m slowly putting the framework together in my mind, piece by piece.</p>

<p>My general approach to learning practical programming has been &#8216;abstraction is a treat that must be deserved.&#8217;  While higher-level languages are amazing and I absolutely cannot wait to use them professionally, at the same time I feel like I need to program a little &#8216;lower&#8217; for a while to appreciate and understand things to a reasonable degree.  Subsequently a good deal of what I do has holes and certainly isn&#8217;t as comprehensive as if I&#8217;d put the same amount of work on top of a template.  But finding and plugging those holes is a great learning experience.</p>

<p>Running my own VPS and web server has probably been the best project, education-wise.  There are certainly plenty of holes and configurations that go into system administration stuff, along with being great practice with bash.  I didn&#8217;t really get that when I was a student, but I&#8217;m sure glad I&#8217;m doing it now.</p>

<p>Knowledge is power.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quality Disclaimer]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/09/quality-disclaimer/"/>
    <updated>2011-05-09T16:36:29-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/09/quality-disclaimer</id>
    <content type="html"><![CDATA[<p>In case this wasn&#8217;t apparent, I wanted to make it explicit real quickly:  all the blog posts thus far have been written on the fly.  I&#8217;ve not gone back and edited them in any major (or minor, for that matter) way;  I believe my stream-of-consciousness is coherent enough to follow without doing so, and I&#8217;m not trying to win any Pulitzers here anyway.</p>

<p>That being said, if something is unclear or obviously, distractingly wrong in one of my posts, please feel free to let me know and I&#8217;ll definitely look into making it clearer/correct.</p>

<p>I realize also that this disclaimer will likely only be read by me, so it&#8217;s probably more of a note to myself to be more conscious of those kinds of things while writing than an actual disclaimer to my (allegedly extant) readership.</p>

<p>Apparently the word of the day is &#8216;extant.&#8217;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Hackathon, Play by Play]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/09/my-first-hackathon-play-by-play/"/>
    <updated>2011-05-09T16:28:41-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/09/my-first-hackathon-play-by-play</id>
    <content type="html"><![CDATA[<p>I ran into a former coworker at Noodles last week, and when I mentioned I was moving to Milwaukee and looking for a job, he suggested I take a look at <a href="http://www.spreenkler.com/">Spreenkler</a>, a startup incubator based in Milwaukee.  I did some research and found that they were putting on a 24-hour hackathon over the weekend!  Realizing that this event combined three things I desperately needed: hacking experience, job opportunities (or at least some MKE networking), and free food, I decided I simply couldn&#8217;t pass it up.</p>

<p>This all happened on Thursday evening, with the event starting Saturday at noon. Sure it was short notice, but all coding was to be done on-site, right?  All we needed by Saturday was an idea.  While I had managed to convince a couple friends (Jared and Devin) to join my &#8216;team&#8217; on Friday evening, we still didn&#8217;t have an idea.  There was some mention of the Zappos API, but the team&#8217;s general indolence brought us to our final idea:  winging it.</p>

<p><strong>Saturday, 12:00pm:</strong>  I felt a bit nervous walking in, as I&#8217;d never done any public coding before. All the more reason to start now though, right?  People slowly trickled in.  12:30pm: Time to announce our plans to everyone.  Uh oh.  We&#8217;d forgot about that.  We figured a plan would slowly form as we tinkered with the tools we were given; actually presenting that was going to be embarrassing, as everyone else seemed to have a solid game plan.  But we did.  Something along the lines of &#8216;We&#8217;re going to use the Zappos API.  That is all.&#8217;</p>

<p>A few minutes later, we had a team name and a git repo (Devin), both named Hot Biscuits (don&#8217;t ask me).  An encryption bug on my laptop prevented me from authenticating with github until I finally figured out a workaround; speed bump #1.</p>

<p>We tinkered with the API for a bit, and while the documentation didn&#8217;t exactly match what the API was sending us, we were able to figure it out pretty quick.  Jared got Apache running, Devin set up the DNS (and bought a new domain name, for funsies), and I got the initial databases up and running.  Not a bad start.</p>

<p>With a general structure in place, the next step was to start polling the API and storing the results.  Perl was suggested, as were ruby, clojure, and python.  I said I&#8217;d do this part, in python (due to previous experience), and set to work.  Jared took off for a bit to run some errands, and Devin, left waiting on my work, started writing the API->DB in clojure, being the fanboy that he is.</p>

<p>The script wasn&#8217;t as clean as I would have liked, because despite having a nice list of dicts to work with, I still had to quote the text being stored, and format the dates to appease the MySQL gods.  After a little bit, though, I had what looked like the correct sequence of SQL statements printing to stdout.  I changed the prints to executes, ran the script, and got &#8230; a whole bunch of encoding errors.  The problem involved some Unicode characters being sent back, and I figured I just had to specify UTF-8 as the encoding type and move right along.  Nope.  Not knowing about the default collation in MySQL, I suspected that might be the problem.  Nope.  Devin was still chugging away on his clojure implementation, and Jared, errands run, ended up writing a solution in perl that actually worked (eventually).  So by the afternoon we had three (mostly) working scripts that did exactly the same thing.  Efficiency!</p>

<p>With data now coming in, we realized the API made no guarantee about duplicates, so we made a few changes to uniques in the DB to prevent that from happening.  Confident that we could now slap a few data-visualization APIs on top of what we had and call it an MVP, we decided to break for dinner/loved ones.</p>

<p>We ended up meeting later that night for a bit to discuss the next morning&#8217;s game plan.  We mocked up a page layout, and planned on meeting back at the hackathon at 8:30 the next day (3 hours is plenty of time to do an entire front-end, right?). I also whipped up a craptacular logo before bed.</p>

<p><strong>Sunday Morning:</strong>  I reluctantly woke up a little before 8.  I was excited to work on the front-end, sure, but there are few things I value more than sleep (probably because I get so little of it during the work week).  Arrived at the building, and was immediately thwarted by locked doors; claims that the building would open again at 8am overlooked the fact that the building was officially closed on Sundays. I didn&#8217;t have the number for the room the event was using, but one of the coordinators fortuitously came down a few minutes later to let someone else in.  Phew.</p>

<p>I figured (correctly) that my teammates would be late, so set to work on writing an HTML skeleton and a basic stylesheet.  Tinkered for a little bit with color schemes and <a href="http://www.patternify.com/">Patternify</a>, an awesome CSS pattern generator that gives you the tile image&#8217;s base64 encoding, so you don&#8217;t even need a separate image file (pretty sweet, right? I even used it for the blog&#8217;s current bg).</p>

<p>Once my teammates showed up, the next few hours were a frantic, stressed blur.  We had location data, and we had brand data.  Someone whispered &#8220;Crocs.&#8221;  There it was: use our data to display statistics about Crocs purchases from Zappos.com.  A guaranteed winner; a tool everyone needed (they just didn&#8217;t know it yet).</p>

<p>The night before, I&#8217;d found a Google Charts API that could color a map.  It promised it could do so given a value for each region, and a &#8216;color gradient.&#8217;  &#8216;Awesome,&#8217; I naively thought.  &#8216;I can give it #purchases in each state, and two colors, and it&#8217;ll color the states along that gradient, similar to the tagroll on delicious.&#8217;  Not so.  After a little more digging, turns out what they&#8217;d meant by &#8216;gradient&#8217; was &#8216;a list of hex colors, one for each region you specify you want colored.&#8217;  Hmm.  Not quite as nice as I&#8217;d envisioned, but I could still make it work; I just had to discretize the colors and the groups of states corresponding to them.  I took the simplest route; 48 states, a gradient of 6 colors, and 8 states for each color.  There&#8217;d have been more contrast (probably) on the map had I factored the range of values(#crocs orders) into the algorithm, but after adding another DB to track purchases by state, and a few more corresponding lines to the perl script, with about an hour left I was more worried about other aspects of the project.</p>

<p>While I got the map working, Devin and Jared worked on styling, layout, and other content.  Devin, much more well-versed in modern web development tools than Jared or I, added HTML Boilerplate and picked a font.  Lacking the &#8216;what&#8217; or &#8216;why&#8217; of Boilerplate, Jared and I left Devin to &#8216;do his thing.&#8217;  Statistics from the DB were promptly pulled and displayed on the page (our only real content).</p>

<p>Reaching &#8216;crunch time,&#8217; and all three of us simultaneously making changes to the repo, it was git&#8217;s time to shine.  While Jared and I were new to git, both svn users in the past (Aside:  UW-CS is so focused on theory that I didn&#8217;t hear the word &#8216;version control&#8217; until my 2nd year.  None of my professors ever made any mention of development tools, save one fierce proponent of Emacs; I guess such knowledge is either assumed or ignored with a passing &#8216;they&#8217;ll figure it out later&#8217;), we still quickly realized that our setup was the definition of &#8216;wrong:&#8217; we had no push/pull triggers, and the &#8216;live&#8217; copy of the repo was simply one Jared had cloned into the document root.  Subsequently, for any changes we pushed, we had to say &#8216;Jared, please do a pull on the server copy.&#8217; Not ideal, and frankly embarrassing to admit, but it&#8217;s prompted me to learn how to properly use git, and is probably a bit humorous to those not directly involved.</p>

<p>We discussed making a javascript counter to keep track of time passed since our &#8216;Croc Epoch,&#8217; and agreed it would be super simple and wouldn&#8217;t even need a query; we&#8217;d just plug the time into the code itself.  Despite this, we still didn&#8217;t have time to implement it, and so ended up with a (much less impressive) static time field.</p>

<p>That was it.  A few quick CSS3 features (lipstick on a corpse?) and it was noon.  Time for the presentations.</p>

<p>We were told to keep them to around 3-5 minutes, and while we were worried about actually having enough material, other groups certainly didn&#8217;t have that problem; several went on for 15 or 20 minutes.  At this point we realized what we were up against:  most of the attendees were the business end of a startup, and were simply presenting ideas and mockups in the hopes of being funded.</p>

<p>So only a few groups had actually written most of their code in the past 24 hours; I think we may have been the only &#8216;from scratch&#8217; team.  The vast majority, it seemed, were months into their projects, idea-wise if not code-wise.  Needless to say, our presentation of &#8216;here&#8217;s what we did in a few hours, on a whim&#8217; didn&#8217;t exactly wow the judges, especially when compared to &#8216;Here&#8217;s this well-thought-out startup idea that, while not actually implemented yet, is still really cool and useful.&#8217;</p>

<p>Needless to say, we didn&#8217;t win anything.  Though Spreenkler had been given three $500 Zappos.com gift cards, and we were one of three teams to have used their API, we did not receive a gift card.  Not that I blame Spreenkler; I understand their decision; they couldn&#8217;t expect to award anything to an obviously impromptu entry without hearing endless frustrated complaints from the other entrants.  Still, I could&#8217;ve used some new shoes, and I do feel that we did more &#8216;hacking&#8217; at the event than most, if not all other teams.</p>

<p>In the end, I&#8217;m not sure how to feel about the experience.  I&#8217;m happy that I went, as I learned some new tricks, got to hang out with friends and enjoyed some free food.  At the same time, I worry about the reception of our efforts.</p>

<p>My final decision to enter the hackathon was based on the idea that a late entry was better than no entry at all.  It was also made under the assumption that this was a true build-something-in-24-hours event, which it certainly was not.  I can&#8217;t help but wonder if these misunderstandings caused us not to be taken seriously, or, worse yet, for Spreenkler to take offense to our well-intentioned entry.</p>

<p>If the latter is true, though, then our entry certainly did more harm than good.  I&#8217;d like to apologize to the Spreenkler team if that&#8217;s the case.  If they were able to see past our hasty submission to our genuine talent, though, that&#8217;s all I could have asked for.</p>

<p>P.S. I ended up implementing the aforementioned javascript counter a few days after the hackathon ended.  More for my peace of mind than anything else.  I ended up writing a short solution on my own, and then once it didn&#8217;t work immediately as I&#8217;d envisioned found a library someone else had written; I thought it was a good compromise.</p>

<p>And oh, yeah, here&#8217;s the (final?) product: <a href="http://crocepoch.com">CROC EPOCH</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Instant Morale Boost]]></title>
    <link href="http://ryalnd.github.com/blog/2011/04/27/instant-morale-boost/"/>
    <updated>2011-04-27T02:26:26-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/04/27/instant-morale-boost</id>
    <content type="html"><![CDATA[<p>I know I&#8217;ve mentioned the frustration I&#8217;ve been feeling with my work, and maybe I&#8217;ve even hinted that, in the back of my mind, I knew I just had to persevere.   But to hear someone as well-known and respected as Ira Glass say that these feelings, this &#8216;gap&#8217; (see below) is commonplace and almost expected in one&#8217;s career, was exactly what this post&#8217;s title suggests.</p>

<p>Am I still frustrated with the quality of my work?  Absolutely.  But whereas before I only had my own intuition to keep me going, I now have Ira Glass telling me it&#8217;s alright:</p>

<blockquote><p>Nobody tells this to people who are beginners, I wish someone told me. All of us who do creative work, we get into it because we have good taste. But there is this gap. For the first couple years you make stuff, it&#8217;s just not that good. It&#8217;s trying to be good, it has potential, but it&#8217;s not. But your taste, the thing that got you into the game, is still killer. And your taste is why your work disappoints you. A lot of people never get past this phase, they quit.</p></blockquote>

<p><a href="http://kottke.org/11/04/your-taste-is-why-your-own-work-disappoints-you">Here&#8217;s the page</a> where I found the interview, and the <a href="http://www.youtube.com/watch?v=BI23U7U2aUY">embedded video</a> of part of it.</p>

<p>It&#8217;s 8:23am, and the future is bright.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I should probably write about something.]]></title>
    <link href="http://ryalnd.github.com/blog/2011/04/11/i-should-probably-write-about-something/"/>
    <updated>2011-04-11T06:29:26-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/04/11/i-should-probably-write-about-something</id>
    <content type="html"><![CDATA[<p>So it&#8217;s been a bit since I&#8217;ve posted anything.  I&#8217;ve been pretty busy.</p>

<p>Between my new 9-5, an amazing girlfriend, the weather improving, several web projects and a few novels, my plate&#8217;s been plenty full.</p>

<p>I&#8217;ve not gotten any new projects lately, but I&#8217;ve been doing a lot of small(ish) changes/fixes to those I&#8217;ve already got going.  I&#8217;ve been considering having some kind of changelog for all my stuff in general, mostly to keep track of what I&#8217;m doing on a day-to-day basis.  I&#8217;ve started documenting such work but have yet to figure out a good place to share that with the rest of the world (or if that&#8217;s even necessary).  I mean,<em> I</em> know I&#8217;m doing the work, I just think it would be nice to let others know as well.</p>

<p>On that note, here&#8217;s some general stuff I&#8217;ve been working on since we last talked:</p>

<ul>
<li>Added some stuff to lucy-dog.com, mostly aesthetic:

<ul>
<li>Changed title(s), metadata</li>
<li>Added a few new pictures</li>
<li>Fixed some formatting, paging issues with &#8216;show all&#8217;</li>
</ul>
</li>
<li>Broken Spoke Updates:

<ul>
<li>Migrated existing site to new host</li>
<li>Added Events functionality to DB, front-end, admin panel</li>
<li>Added, tweaked some .js libraries for picking dates and times (related to Events)</li>
</ul>
</li>
</ul>


<p>That&#8217;s all I can think of off the top of my head. I&#8217;ll let you know when I get an actual changelog documented.</p>

<p>I&#8217;ve been reminded this last week that GoDaddy is a real pain if you don&#8217;t want to use their GUIs for everything.  Allowing SSH access took around 2 days to finally get implemented, after the DNS settings were populated.  I have yet to figure out how to use mysql from a shell; no combination of usernames and passwords allows me access, although those same credentials work everywhere else.  I&#8217;m sure PHPMyAdmin is a fine tool if you like that sort of thing, but I really just want access to a mysql prompt.  Is that so much to ask, GoDaddy?</p>

<p>On a related rant I have yet to find a good emacs script for multi-mode editing (PHP, javascript, html, css in this example). I tried a few but they weren&#8217;t really what I was looking for.  From what I remember (this was a few weeks back) one was very close, but its PHP-mode was all kinds of broken, to the point of unusability.  If anyone has a suggestion let me know.</p>

<p>Almost done with the bike site, with the notable exception of graphics.  I am <em>absolutely</em> not a graphic designer, much as it pains me to admit.  I&#8217;ve taken on a few projects now where they&#8217;ve handed me a logo designed by someone for use as a sticker or on a t-shirt.  That&#8217;s great, but my Adobe fu isn&#8217;t such that I can easily make that into a pretty, well-laid-out header graphic.  Consequently graphics are what need the most improvement on these sites.  I&#8217;m getting better with Photoshop and Illustrator every day, but at this point I&#8217;d never take on a &#8216;design&#8217; project.  I truly appreciate nice graphics, and know what does and does not work or look good.</p>

<p>At the end of the day, though, I&#8217;m not a graphic designer.  I write code.  It&#8217;s one of those things where I think, &#8216;With some experience you can make some awesome logos!&#8217; and keep that in the back of my mind as I fumble with these design tools to produce graphics that don&#8217;t quite cut it.  Maybe I&#8217;ll eventually get there.  Maybe I&#8217;ll just hire a graphic designer.</p>

<p>On a less technical note, I finished Infinite Jest a few weeks ago.  Initially I was upset by the ending (if one wants to call it that), but after a day or two of subconscious processing I came to the opposite conclusion: that while certain elements of the story were not explicitly explained, there were plenty of clues and allusions to allow the reader to work things out for himself.  I liked that.  Apparently DFW&#8217;s last unfinished novel is out now, so I&#8217;m going to have to pick that up soon.</p>

<p>At Devin&#8217;s Mad Clojure Meetup last week I was referred to Logicomix, which I shortly thereafter bought and consumed.  The idea and format were what drew me immediately in:  a story about famous logicians/mathematicians/philosophers, in graphic novel format?  What&#8217;s not to like about that?  While the illustrations were amazing, I found the writing a little boring and sometimes awkwardly/ambiguously phrased.  While I understand that including in-depth details of the fields would have made the book inaccessible to a good majority of readers, that&#8217;s honestly what I was expecting and was a bit disappointed in that regard.  I felt that the book was too vague to be useful as anything more than a character-driven story and general history lesson.  Maybe that&#8217;s what they were going for; I just imagined that they would cater to the &#8216;nerd&#8217; audience a bit more.</p>

<p>Still looking for a job in Milwaukee.  Further updates as events warrant.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Site, New Job]]></title>
    <link href="http://ryalnd.github.com/blog/2011/03/15/new-site-new-job/"/>
    <updated>2011-03-15T07:48:21-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/03/15/new-site-new-job</id>
    <content type="html"><![CDATA[<p>It&#8217;s been a few weeks since I last posted.  Quite a bit&#8217;s happened in that time.</p>

<p>To begin, I finally found a job.  Starting Wednesday I&#8217;ll be working a regular 9-to-5, doing primarily technical support for pharmacy software.  While it&#8217;s only a temporary position and doesn&#8217;t involve much development, I&#8217;m still really looking forward to some structure and a more &#8216;normal&#8217; circadian rhythm.  I consider myself one of those people that loves to work, and get genuine satisfaction from doing a job well.  Also, it&#8217;s well-paying and I&#8217;m dead broke; that certainly doesn&#8217;t hamper my anticipation.</p>

<p>I haven&#8217;t done any Project Euler since I reached Level 2.  I felt it was a good stopping point for the time being, but I&#8217;ve definitely learned a lot from it and plan on doing a problem or two when the urge strikes; perhaps in a new language.  It&#8217;s been really good for learning syntax and structure basics for Python, and at this point I feel confident that I could pretty easily solve most problems with it.  If you&#8217;re looking to learn a new language, applications (in the literal sense) to math problems are in my opinion a great way to start.</p>

<p>Still working on a couple of web development contracts, both for starting businesses.  They&#8217;re going well, although the biggest problem I&#8217;m having is with the level of detail to which I&#8217;m giving these sites.  I&#8217;m trying to keep things quick and simple, but jQuery and PHP make doing all these awesome things so simple that I end up spending wayyy too much time experimenting with features the client neither asked for nor particularly needs.  Giving them more than they asked for up-front isn&#8217;t really a problem in itself (deleting is pretty simple), but it&#8217;s becoming one given that these need to get finished post-haste since time will be sparse come tomorrow.</p>

<p>Finally, I launched a site last week called (tentatively): <a href="http://lucy-dog.com">Lucy In Hats</a>.  It started out as a joking comment about my girlfriend&#8217;s dog, and within a few hours I had bought a domain name and had something up and running.  I&#8217;ve been making tweaks and adding features since then, but the concept&#8217;s been the same since the start: people vote on pictures of an adorable mini-pug in silly hats.</p>

<p>I ended up going through with the idea because I wanted to see how much traffic I could generate to the site, under the general knowledge that people can&#8217;t get enough of cute animals.  That and learning the underlying technologies needed for a relatively simple site like this were my main goals for the project. The fact I only had to spend $10 on a domain name got things off the ground right away.</p>

<p>I&#8217;ve done some &#8216;advertising&#8217; on Facebook, both on my account and on the lady&#8217;s; beyond that I&#8217;ve been relying on word-of-mouth and people&#8217;s attraction to cuteness.  I&#8217;d say he site is a success even at this point, at least as compared to ry-land.com and this blog.</p>

<p>As of right now I&#8217;ve had around 10x as many unique visitors to the site as to ry-land.com, and about 35x as many page views.  Granted, I haven&#8217;t advertised ry-land.com on Facebook, nor is there dynamic content to drive all those page views, but I&#8217;m still pretty impressed by its popularity in the first week.</p>

<p>I&#8217;m really cranking out the jQuery and PHP and doing new stuff with them every day.  I&#8217;m enjoying it, learning a bunch, and tomorrow I should even start making some money again.  Not bad.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler: Level 2]]></title>
    <link href="http://ryalnd.github.com/blog/2011/02/25/project-euler-level-2/"/>
    <updated>2011-02-25T20:51:27-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/02/25/project-euler-level-2</id>
    <content type="html"><![CDATA[<p>Spent the day attempting contact with people who didn&#8217;t want to communicate with me.  Filed my state taxes (had done federal a week or so ago).</p>

<p>I couldn&#8217;t decide whether to feel good about today&#8217;s productivity or not, so to add some weight to the &#8216;productive&#8217; side, I went ahead and finished the remaining 7 PE problems needed to get me to the coveted <strong>Level 2</strong>.</p>

<p>In case you were wondering, and for posterity,  those problems were: <a href="http://projecteuler.net/index.php?section=problems&amp;id=33">33</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=53">53</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=41">41</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=56">56</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=97">97</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=55">55</a>, and <a href="http://projecteuler.net/index.php?section=problems&amp;id=79">79</a>.  Problem 79 was by far the most interesting; I even ended up doing some OOP with Python for the first time.</p>

<p><strong>Quick summary:</strong></p>

<p>33: Was only getting three of the four fractions initially due my incorrectly assuming that the pre-canceled denominator was going to be a whole multiple of the numerator: 26/65 did not fit that mold.</p>

<p>53: The only issue here was parsing the actual problem syntax.  Thanks again, Professor Ono (my combinatorics prof.)</p>

<p>41: Although I haven&#8217;t mentioned it before, I wrote a Sieve of Eratosthenes-like function for (really) quickly computing primes up to a certain number when I first started PE.  I once again used that here, and filtered that list down to pandigitals.  I won&#8217;t say the answer, but I do want to mention the fact that it was 7-digits, due to the fact that the sums from 1 to 8 and 9 are 36 and 45, respectively, and so are always divisible by 3 (thanks to that nice rule for divisibility by 3).</p>

<p>56: Pretty much exactly how you&#8217;d first think to do it.</p>

<p>97:  Ended up using Python&#8217;s built-in pow() function, taking full advantage of its optional modulo argument to limit the result (and calculations) to only those last ten digits.  Other than that, completely straightforward.</p>

<p>55: Easier to just show this one.  Used a recursive function and the limits the explicitly stated.</p>

<div><script src='https://gist.github.com/2019414.js?file=euler_55.py'></script>
<noscript><pre><code>def lychrel(n, it):
    if it&lt;50:
        rev = n[::-1]
        _sum = str(int(n) + int(rev))
        if _sum==_sum[::-1]:
            return int(_sum)
        else: return lychrel(_sum, it+1)
    else: return 0

l = [x for x in range(1,10000) if not lychrel(str(x),0)]
print len(l)</code></pre></noscript></div>


<p>Problem 79 was the most interesting.  I just finished.  I made two related assumptions, without which my answer probably wouldn&#8217;t work. I also cheated a bit and ended up explicitly telling the program which numbers were used in the password, although I could&#8217;ve easily made that list from the input as well.</p>

<p>I ended up using a Python class in the same way you&#8217;d use a C struct, in this case to associate two sets to each digit used in the password: one representing all the numbers that appeared to the left of that digit in those logins, and the other representing those that appeared to the right of it.  Here&#8217;s where those assumptions I mentioned earlier came in:  I assumed that each digit was only present in the password once, and that there were no conflicting orderings (e.g. 6 appearing both to the left and right of a digit x in different login attempts, which would imply that x appears more than once in the password).</p>

<p>I ran my program and took a look at the lists, and saw that in this case my assumptions were correct.  Then I simply ordered those digits based on the lengths of their &#8216;left&#8217; sets (So the digit with nothing to the left of it would be first, and the digit with everything else to the left of it would be last.  Get it?).  Voila.  Code:</p>

<div><script src='https://gist.github.com/2019414.js?file=euler_79.py'></script>
<noscript><pre><code>class digit:
    def __init__(self,x):
        self.dig = x
        self.left = set()
        self.right = set()

#split the input into a list of 3-digit login attempts
logins = list(set([l.strip('\n\r') for l in open('keylog.txt')]))

#compile key's left and right sets
def place(key):
    num = str(key.dig)
    check = [line for line in logins if num in line]
    for line in check: #for each line that contains this digit
        place = line.index(num)
        for i in line:
            if line.index(i) &lt; place:
                key.left.add(i)
            elif line.index(i) &gt;place:
                key.right.add(i)

#create an instance for each digit present
obs = [digit(l) for l in ['0','1','2','3','6','7','8','9']]
#create those instances' associated sets
[place(dig) for dig in obs]

#place in logical order
obs.sort(key=lambda x: x.left)


'''
SORT V0
for i in range(9):
    for dig in obs:
        if len(dig.left)==i:
            print dig.dig
SORT V1
print [dig.dig for i in range(9) for dig in obs if len(dig.left)==i]
'''
print ''.join([d.dig for d in obs])
print reduce(lambda x,y: x+y,[d.dig for d in obs])</code></pre></noscript></div>


<p>Commented out near the bottom you&#8217;ll see two previous methods I had used to do the final sorting mentioned above.  V0 had nested loops, which wasn&#8217;t awful but not good; V1 was essentially just a list comprehension of same.  I tried to be a bit more &#8216;pythonic&#8217; with my final method, using lambda function within the list.sort() method to order the list of &#8216;digit&#8217; instances on their left set.</p>

<p>The last two lines produce the same string, but I wanted to show both approaches. The first is the preferred, pythonic, and much faster way.  The second is essentially the same as calling <code>print reduce(operator.add, [d.dig for d in obs])</code>.</p>

<p>which is exactly what Python&#8217;s built-in <code>sum()</code> function does.   However Python will (purposely) throw an exception if you try to use <code>sum()</code> on a list of strings, apparently because they don&#8217;t want you doing that (although, as I showed, lambdas are a way around that).</p>

<p>A more thorough explanation of the above can be found on Stack Overflow (<a href="http://stackoverflow.com/questions/3525359/python-sum-why-not-strings">link</a>).</p>

<p>It&#8217;s official. I really like Python.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Feb 24, 2011]]></title>
    <link href="http://ryalnd.github.com/blog/2011/02/24/feb-24-2011/"/>
    <updated>2011-02-24T16:59:00-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/02/24/feb-24-2011</id>
    <content type="html"><![CDATA[<p>Haven&#8217;t written in a while.  Things have been busy.  Not always productive, but always busy.  I just finished a few PE problems, and I&#8217;ll talk about those in a bit, but first here&#8217;s everything else:</p>

<p>Officially started work on a new web development project, using mostly MySQL, JavaScript and PHP.  This will definitely be the most complicated of the ones I&#8217;ve done so far, so I&#8217;m looking forward to learning how to use these technologies to do things I&#8217;ve done in the past with .NET.  I&#8217;ll keep you posted on that.</p>

<p>The site&#8217;s in an awkward in-between phase right now;  I stripped down a lot of stuff in my towards-2.0 efforts, but haven&#8217;t added much new stuff besides some sweet fonts (props to @font-face).</p>

<p>I&#8217;ve been struggling lately with my genetic predisposition toward a veritable smorgasbord of allergies and their physical manifestations (thanks mom and dad!), trying to keep things under control with medication and allergen-avoidance, the latter of which unfortunately includes my girlfriend&#8217;s house.  So that&#8217;s no fun.  Things are getting much better though and I for one cannot wait for this cold, dry weather to end.</p>

<p>For the aforementioned and other reasons, I haven&#8217;t been doing a lot of going out.  Went to the Comedy Club last week for the 2nd round of the competition, but this week opted instead to see Say Hi at the High Noon Saloon, which was a good time.  Other than that it&#8217;s been interviews, doctor&#8217;s appointments, endless email correspondence, coding and reading.</p>

<p>I started Infinite Jest a few weeks ago and I&#8217;m a little more than 1/3 done right now.  Despite the fact that a friend owns a copy and lent it out to me, I (after much internal debate) opted to buy the electronic version for my Kindle, which I don&#8217;t regret.  Besides being able to jump to one of the hundreds of endnotes by simply clicking on the text-embedded link (as opposed to flipping rather awkwardly back and forth through a ragged, floppy paperback version), I&#8217;m also able to see the definition of a word (e.g. &#8216;atavistic&#8217;) simply by hovering over it.  I&#8217;m really enjoying both the book itself and its positive impact on my vocabulary.</p>

<p>Regarding the job front, all&#8217;s (mostly) quiet.  It&#8217;s still an awkward situation, between looking for temporary/contract/short-term work in Madison v. a development &#8216;career&#8217; in Milwaukee.  Even the contract jobs I&#8217;m finding here are confusingly looking for someone with the desire to work (the contract position) full-time.  While I haven&#8217;t been dishonest at interviews to any degree regarding my long-term goals and career plans, I know that doing so would probably get me the position (a few places have even stated this implicitly).  In a manner consistent with my vocational luck as of late, I&#8217;ve now been presented with one verifiable and one probable job offer, for long-term development positions here in Madison.  Again, though, I don&#8217;t want to lie my way into a job when I know very well I&#8217;ll be gone in August, so for the time being unemployed I remain.</p>

<p>Project Euler.  I&#8217;ve now got 43 problems done.  7 more and I&#8217;ll be level 2 and finished with the first page.  Regarding the last post I managed to speed up problem 27 and knocked that one down.  Tonight I completed <a href="http://projecteuler.net/index.php?section=problems&amp;id=31">31</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=37">37</a> and <a href="http://projecteuler.net/index.php?section=problems&amp;id=39">39</a>, but I&#8217;m mostly gonna be explaining and (<em>gasp</em>) presenting my solution to problem 39.</p>

<p>I had actually started on problem 37 a week or so ago, but my solution wasn&#8217;t finding all 11 requested primes in the range of like [1, 100,000,000].  I was on the right track with realizations like &#8216;these primes can&#8217;t contain the digits 4,6, or 8 anywhere,&#8217; I went wrong in also including 2 and 5 in that list, since those numbers could in fact be the leftmost digit of said primes.  P37 done.</p>

<p>Problem 31 was mostly a no-brainer; I&#8217;ve seen similar problems in Combinatorics and wrote a recursive algorithm to solve it.  It essentially involved moving from the highest-denomination coins to the lowest, with the recursive function calculating in how many ways the given amount could be made with a decreasing number of denominations.  P31 done.</p>

<p><a href="http://projecteuler.net/index.php?section=problems&amp;id=39">Problem 39</a> asks you to find the perimeter <em>p</em> of a right triangle that has the greatest number of possible pythagorean triples (a,b,c) that can satisfy that perimeter.  After some half-written solutions and great deliberation, the solution came out of knowing that term, &#8216;pythagorean triple,&#8217; and consequently <a href="http://en.wikipedia.org/wiki/Pythagorean_triple">this Wikipedia page</a>.</p>

<p>Reading through this, particularly the parts about <strong>P</strong>rimitive <strong>P</strong>ythagorean <strong>T</strong>riples and Euclid&#8217;s formula, I was able to engineer a solution through the following logic:</p>

<ol>
<li><p>All possible Pythagorean triples (what we&#8217;re trying to tally for our solution) are either a PPT or a multiple of same.</p></li>
<li><p>PPTs can be calculated with Euclid&#8217;s formula: <code>a = m^2 - n^2, b = 2mn, c = m^2 + n^2</code> given that <code>m &gt; n</code>, <code>m</code> and <code>n</code> are coprime (i.e. <code>gcd(m,n)==1</code>), and one of them is even.</p></li>
<li><p>Combining the formula above with the Pythagorean Theorem and the obvious fact that <code>a + b + c = p</code>, we get: <code>2m^2 + 2mn = p</code></p></li>
<li><p>For a triple to be a solution for a perimeter <em>p</em>, <em>p</em> must be a multiple of a given PPT&#8217;s perimeter.  Put another way, for (a,b,c) of a satisfying PPT, <code>p % (a + b + c) == 0</code></p></li>
</ol>


<p>After that it was just a matter of putting it all together:</p>

<div><script src='https://gist.github.com/2019433.js?file='></script>
<noscript><pre><code>from fractions import gcd

#Euclid's Formula
def getabc(m,n):
    a = m**2 - n**2
    b = 2*m*n
    c = m**2 + n**2
    return a,b,c

#calculate all PPTs for which p &lt; 1000
prim_trips = [getabc(m,n) for m in range(1,100) for n in range(1,100) if m &gt; n and gcd(m,n) == 1 and 2*m*m + 2*m*n &lt;= 1000 and (m%2 == 0 or n % 2 == 0)]

#find all possible triples for a given p
def total(p):
    return sum([1 for (a,b,c) in prim_trips if p % (a + b + c) == 0])

#collect all possible solutions for each perimeter p
totals = [(p,total(p)) for p in range(1,1001)]

#get max
print max(totals, key = lambda x: x[1] )
</code></pre></noscript></div>


<p>Check back soon for more discussion of math, code, and existential crises.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Math in the Cold]]></title>
    <link href="http://ryalnd.github.com/blog/2011/02/10/math-in-the-cold/"/>
    <updated>2011-02-10T18:07:51-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/02/10/math-in-the-cold</id>
    <content type="html"><![CDATA[<p>I wasn&#8217;t feeling very well today, and it was super cold out, so I decided to be as productive as I possibly could at home.  This involved:</p>

<ul>
<li>Updating profiles/resumes on various job sites</li>
<li>Searching and applying for jobs on same</li>
<li>Doing some stalking of Milwaukee-area businesses</li>
<li>Finally setting up, lurking IRC</li>
<li>Several PE problems as a reward</li>
</ul>


<p>Most of those are self-explanatory.  I finally updated the pdf version of my resume to reflect the changes made to my html version, and then updated any references to the old one.  I can&#8217;t believe that Monster only accepts resumes in .rtf, .doc, and .txt.  I&#8217;ve mostly ignored Monster for the simple fact that I have a horribly-formatted .rtf on there and refuse to change it out of principle.  If an employer isn&#8217;t going to hire me because I only provide html and pdf versions of my resume, so be it.</p>

<p>I&#8217;m starting to compile a list of possible Milwaukee-area businesses I would like to work for, so that I can start spamming them my resume :).  I finally got irssi set up on this box, as I haven&#8217;t been on IRC in a looooong while.  I&#8217;ve been lurking #python while doing Project Euler, and actually gave my first piece of help to someone on the channel as well.  It had almost nothing to do with python, as it was a pretty basic regex question about character classes, but I helped nonetheless.</p>

<p>Did problems <a href="http://projecteuler.net/index.php?section=problems&amp;id=26">26</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=40">40</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=42">42</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=45">45</a>, and <a href="http://projecteuler.net/index.php?section=problems&amp;id=52">52</a> tonight. Not bad progress for a few hours.  I also wrote a solution to problem <a href="http://projecteuler.net/index.php?section=problems&amp;id=27">27</a>, but it&#8217;s still running as I write this.  I think I&#8217;m going to let it run overnight and see if it actually finishes (totally against the rules, I know).  It deals with quadratics though and I couldn&#8217;t immediately see any way to narrow down the list of possible coefficients, so I just tried brute-force.  I&#8217;ll let it stew in my head for a while and see if I come up with anything.</p>

<p>Not much of note for these, they were pretty straightforward.  I did write a function that performed long-division for problem 26, which I thought was pretty hilarious.  It was the easiest way to determine whether the decimal had a repeating sequence, the length of said sequence.  I got the idea from <a href="http://en.wikipedia.org/wiki/Repeating_decimal#Decimal_expansion_and_recurrence_sequence">Wikipedia</a>, if you care to see.  There was some more I/O, which was nice to have as practice, and I&#8217;m using dicts and sets, maps and lambdas all over the place now.  Slow and steady, right?</p>

<p>I know I keep promising to post my code, and as I&#8217;ve been saving it the only real thing keeping me from doing so is my shyness at others seeing that code.  I might select the simplest, most elegant examples, but if you&#8217;d like to see how I came to a particular solution I&#8217;d be more than willing to share.  I&#8217;m going to try to use IRC for help with refactoring some code.  My biggest concern is that I&#8217;m not doing everything in true &#8216;pythonic&#8217; manner, so I think getting help there will reduce the shyness.</p>

<p>On the income front, I have two potential web-design contracts coming in, from friends of friends.  It&#8217;ll be good practice and that&#8217;s really what I need right now, more than income (although more of that would be nice, too).  All temp/contract web/IT work I&#8217;ve tried to attain has fallen through the cracks.  It&#8217;s frustrating but what can you do.  I&#8217;m trying to stay positive and not starve to death.  So far so good.</p>

<p>It&#8217;s still real cold here (0°), but it&#8217;s looking to get in the 40s by Sunday, which is awesome.  I think we&#8217;re going to try and go sledding tomorrow!  Fun and exercise; I could use both.</p>

<p>I also wanted to mention that I hilariously added a &#8216;Like&#8217; button to each post on the blog.  I don&#8217;t think anyone is even reading these, let alone considering &#8216;liking&#8217; them, but I figure if and when they do that&#8217;ll definitely help to get some traffic.  At this point the only traffic I could really hope for are those doing Project Euler, which is minimal at best, but we&#8217;ll see.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Job, More Euler]]></title>
    <link href="http://ryalnd.github.com/blog/2011/02/05/no-job-more-euler/"/>
    <updated>2011-02-05T17:57:27-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/02/05/no-job-more-euler</id>
    <content type="html"><![CDATA[<p>Worked on problems <a href="http://projecteuler.net/index.php?section=problems&amp;id=23">23</a> and <a href="http://projecteuler.net/index.php?section=problems&amp;id=35">35</a> tonight.  Problem 23 was pretty straightforward, especially in Python:</p>

<ol>
<li><p>Define a function that finds the sum of a number&#8217;s proper divisors</p></li>
<li><p>Create a list of all abundant numbers less than 28123</p></li>
<li><p>Create a <strong>set</strong> of sums resulting from the addition of each pair in the list described in 2.</p></li>
<li><p>Create a final set of numbers &lt; 28123 that are not in the set described in 3.</p></li>
</ol>


<p>The answer is the sum of that last set. Easy enough, right?  I&#8217;ve been using the built-in <code>set</code> structure from Python where it makes sense (where I don&#8217;t want duplicates), although I&#8217;ve been doing so under the assumption that their duplicate handling is better-implemented than anything I would write after-the-fact.  I imagine they&#8217;re just doing some checks before actually appending, but I&#8217;m curious to learn exactly how they&#8217;re doing it, and if in fact I&#8217;m using set correctly in these instances.  Remind me to look that up later.</p>

<p>Figured I&#8217;d have 35 finished by the time I finished writing this, but my algorithm is apparently too naive, and requires something more than iterating through all primes under one million to find which are circular. Dang.  I&#8217;ll keep working on it after this, and post about it when I&#8217;m done.</p>

<p>Did a bit of work on the main site, mostly behind the scenes.  I actually designed a few logos today, as I plan on putting a banner/header at the top in place of my little &#8216;random statement&#8217; javascript thingy.  I&#8217;m moving toward making the front page more like the border-rounded, background-gradiented, &#8216;look at me I&#8217;m a 2.0 designer&#8217; designs you see everywhere these days.  Not because I agree with the aesthetic, but because I want to show that I can do that, too.</p>

<p>Super Bowl tomorrow.  I honestly haven&#8217;t payed very much attention this season, but having the Packers in the running always reminds me of the great Holmgren era, and thus of my childhood.  It&#8217;s always fun to watch a football game with friends, especially when I&#8217;m actually invested in a team, so tomorrow should be a lot of fun.</p>

<p>Still no job, but I&#8217;m pretty much constantly in talks with recruiters.  The fact that in the past several months they&#8217;ve not managed to find me a job indicates that maybe they&#8217;re not the best way to go, but I remain confident in my competence and have no doubt that eventually someone else will recognize it as well.</p>

<p>In the meantime I&#8217;ll be calculating circular primes and learning from my mistakes.</p>

<p>Edit (12:16am):
Finished problem 35.  Pretty embarrassed about that one.  I was trying to speed up the algorithm by reducing the list of primes over which it was iterating, but wasn&#8217;t having much luck, until the daily facepalm:</p>

<blockquote><p><strong>Besides 2 and 5, circular primes&#8217; digits can only be 1,3,7, or 9.</strong></p></blockquote>

<p>The number of primes under one million? About 78k.  Those that also satisfy the above condition? 2500.</p>

<p>Problem 35 down.  33 problems done, 289 to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lots of Snow]]></title>
    <link href="http://ryalnd.github.com/blog/2011/01/31/lots-of-snow/"/>
    <updated>2011-01-31T19:11:48-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/01/31/lots-of-snow</id>
    <content type="html"><![CDATA[<p>Woke up to the promise of a blizzard.</p>

<p>I was supposed to head down to Kenosha for a dentist&#8217;s appointment this morning, but that was canceled due to weather; it wasn&#8217;t a crucial appointment, and I really didn&#8217;t want to be stuck there until Wednesday/Thursday.</p>

<p>Today also marked the first Mad Railers meeting I was (supposed to be) attending, but weather and lack of suitable transportation left me home coding instead.  I tried to make myself feel better with some Ruby/Rails research/education and rationalizing that my lack of knowledge in that framework would prevent me from learning/contributing much at such a meeting, but I&#8217;m still bummed that I missed it and have yet to attend.  Next month&#8217;s meeting is marked in red on the calendar.</p>

<p>PE update:  Did problems <a href="http://projecteuler.net/index.php?section=problems&amp;id=24">24</a>, <a href="http://projecteuler.net/index.php?section=problems&amp;id=36">36</a>, and <a href="http://projecteuler.net/index.php?section=problems&amp;id=34">34</a> today, in that order.  24 was the most interesting; I had started on a solution to it a few days ago.  I knew from my Combinatorics class how to represent permutations as a list of inversions:</p>

<blockquote><p>Given a set of n digits, each permutation of that set can be written as a list of n-1 numbers, say i(0)-i(n-1), where i(n) represents the number of inversions with respect to n. You only need n-1 numbers in the list/vector, as the last is implied(same idea as degrees of freedom in stats).</p></blockquote>

<p>If the original set is in lexicographic order, i.e. 12345, the easiest way to explain, say,  i(3) is as the count of numbers out of order with respect to 3.  If the permutation is 23145, the inversion vector(list) would be [1100].</p>

<p>This means that 2 has one number out of order (1), as does 3 (also 1).  Remember though, that inversions in general are just a pair(x,y), and a permutation can be defined as the list of pairwise-flips (inversions) it takes to get from the original number/set/whatever.</p>

<p>So, knowing that, I basically jumped into writing a solution as follows:</p>

<ul>
<li>The starting, 0th permutation is 0123456789</li>
<li>I would manually write out the next x permutations, in lexicographic order, along with the corresponding inversion vectors, in the hopes of seeing a pattern regarding the list of inversion vectors.

<ul>
<li>I did this under the idea that calculating 1,000,000 10-digit numbers in a certain way would be much faster than actually doing the permuting manually, one million times.</li>
</ul>
</li>
</ul>


<p>I did this for what ended up being the first 24 permutations, which corresponded to permutations of only the last 4 digits, and ended up with something like the table on the far left:</p>

<table class='small left'>
<tr><th> number </th><th> permutation </th></tr>
<tr><td> 6987 </td><td> 012 </td></tr>
<tr><td> 7689 </td><td> 100 </td></tr>
<tr><td> 7698 </td><td> 101 </td></tr>
<tr><td> 7869 </td><td> 110 </td></tr>
<tr><td> 7896 </td><td> 111 </td></tr>
<tr><td> 7968 </td><td> 102 </td></tr>
<tr><td> 7986 </td><td> 112 </td></tr>
<tr><td> 8679 </td><td> 020 </td></tr>
<tr><td> 8697 </td><td> 021 </td></tr>
<tr><td> 8769 </td><td> 120 </td></tr>
<tr><td> 8796 </td><td> 121 </td></tr>
<tr><td> 8967 </td><td> 022 </td></tr>
<tr><td> 8976 </td><td> 122 </td></tr>
<tr><td> 9678 </td><td> 003 </td></tr>
<tr><td> 9687 </td><td> 013 </td></tr>
<tr><td> 9768 </td><td> 103 </td></tr>
<tr><td> 9786 </td><td> 113 </td></tr>
<tr><td> 9867 </td><td> 023 </td></tr>
<tr><td> 9876 </td><td> 123 </td></tr>
</table>




<table class='small left'>
<tr><th> decimal   </th><th> factorial   </th></tr>
<tr><td> 0         </td><td> 0!          </td></tr>
<tr><td> 1         </td><td> 10!         </td></tr>
<tr><td> 2         </td><td> 100!        </td></tr>
<tr><td> 3         </td><td> 110!        </td></tr>
<tr><td> 4         </td><td> 200!        </td></tr>
<tr><td> 5         </td><td> 210!        </td></tr>
<tr><td> 6         </td><td> 1000!       </td></tr>
<tr><td> 7         </td><td> 1010!       </td></tr>
<tr><td> 8         </td><td> 1100!       </td></tr>
<tr><td> 9         </td><td> 1110!       </td></tr>
<tr><td> 10        </td><td> 1200!       </td></tr>
<tr><td> 11        </td><td> 1210!       </td></tr>
<tr><td> 12        </td><td> 2000!       </td></tr>
<tr><td> 13        </td><td> 2010!       </td></tr>
<tr><td> 14        </td><td> 2100!       </td></tr>
<tr><td> 15        </td><td> 2110!       </td></tr>
<tr><td> 16        </td><td> 2200!       </td></tr>
<tr><td> 17        </td><td> 2210!       </td></tr>
<tr><td> 18        </td><td> 3000!       </td></tr>
<tr><td> 19        </td><td> 3010!       </td></tr>
<tr><td> 20        </td><td> 3100!       </td></tr>
<tr><td> 21        </td><td> 3110!       </td></tr>
<tr><td> 22        </td><td> 3200!       </td></tr>
<tr><td> 23        </td><td> 3210!       </td></tr>
</table>


<p>Not seeing a pattern?  Neither did I.  It starts out looking like it&#8217;s just counting up in binary, but then a 2 pops up, and there aren&#8217;t any nice rules like, say, &#8216;they increase in value from L to R&#8217; because of cases like 8679.</p>

<p>I tried in vain to see/reverse-engineer a pattern from this list of vectors, and eventually gave up for the night.   I knew that I was on the right track, that somehow the order in which these items were inverted to preserve lexicographic order wasn&#8217;t just random.  As with some of my past PE solutions, the key came from a little bit of research: I was browsing Wikipedia&#8217;s entry on permutations, when I came to <a href="http://en.wikipedia.org/wiki/Permutation#Numbering_permutations">this</a>.</p>

<p>Well, that definitely looked promising.  After a bit more reading and clicking links, I came upon the table you see on the immediate left(found <a href="http://en.wikipedia.org/wiki/Factorial_number_system#Examples">here</a>):</p>

<p>Ok, so they&#8217;re not exactly the same.  I think the irregularities come from my non-standard, on-the-fly way of representing permutations, but you can imagine my excitement when I found that table.  It meant my hunch was right, and the main point was this:  <strong>Listing permutations in lexicographic order yields a pattern of inversion vectors, and this pattern corresponds directly to the factoradic representation of that permutation&#8217;s order in that list.  </strong>Or, to quote Wikipedia a few lines down:</p>

<p><em>There is a natural mapping between the integers 0, &#8230;, n! − 1 (or equivalently the numbers with n digits in factorial representation) and permutations of n elements in lexicographical order, when the integers are expressed in factoradic form. This mapping has been termed the Lehmer code (or inversion table).</em></p>

<p>Well, there you have it.  The trick comes from writing a decimal in factoradic form, i.e.</p>

<pre><code>15 = 2110! = 2*3! + 1*2! + 1*1! + 0*0!
</code></pre>

<p>and 2110 as an inversion vector corresponds to the permutation 2130, which is:</p>

<blockquote><p>The 15th permutation of 0123. Yay!</p></blockquote>

<p>So I had my answer.  To find the millionth lexicographic permutation of 0123456789, all I had to do was find the factoradic representation of 999999 (off by one), which would map to an inversion vector, from which I could find the permutation.  And find it I did.</p>

<p>After that, 36 and 34 were easy.  For 36 I just wrote a function <code>is_pal()</code> that takes a string and returns whether or not it&#8217;s palindromic (and now I know how to get the binary representation of an int!).  34 was even easier: I reused the factorial function I had just written for 24 (I know there are built-in ones now; I wanted to write my own).</p>

<p>Hopefully tomorrow won&#8217;t get snowed out.</p>
]]></content>
  </entry>
  
</feed>
