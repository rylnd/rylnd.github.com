<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | RyLand]]></title>
  <link href="http://ryalnd.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://ryalnd.github.com/"/>
  <updated>2012-03-11T20:53:14-05:00</updated>
  <id>http://ryalnd.github.com/</id>
  <author>
    <name><![CDATA[ryland]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My First Hackathon, Play by Play]]></title>
    <link href="http://ryalnd.github.com/blog/2011/05/09/my-first-hackathon-play-by-play/"/>
    <updated>2011-05-09T16:28:41-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/05/09/my-first-hackathon-play-by-play</id>
    <content type="html"><![CDATA[<p>I ran into a former coworker at Noodles last week, and when I mentioned I was moving to Milwaukee and looking for a job, he suggested I take a look at <a href="http://www.spreenkler.com/">Spreenkler</a>, a startup incubator based in Milwaukee.  I did some research and found that they were putting on a 24-hour hackathon over the weekend!  Realizing that this event combined three things I desperately needed: hacking experience, job opportunities (or at least some MKE networking), and free food, I decided I simply couldn't pass it up.</p>

<p>This all happened on Thursday evening, with the event starting Saturday at noon. Sure it was short notice, but all coding was to be done on-site, right?  All we needed by Saturday was an idea.  While I had managed to convince a couple friends (Jared and Devin) to join my 'team' on Friday evening, we still didn't have an idea.  There was some mention of the Zappos API, but the team's general indolence brought us to our final idea:  winging it.</p>

<p><strong>Saturday, 12:00pm:</strong>  I felt a bit nervous walking in, as I'd never done any public coding before. All the more reason to start now though, right?  People slowly trickled in.  12:30pm: Time to announce our plans to everyone.  Uh oh.  We'd forgot about that.  We figured a plan would slowly form as we tinkered with the tools we were given; actually presenting that was going to be embarrassing, as everyone else seemed to have a solid game plan.  But we did.  Something along the lines of 'We're going to use the Zappos API.  That is all.'</p>

<p>A few minutes later, we had a team name and a git repo (Devin), both named Hot Biscuits (don't ask me).  An encryption bug on my laptop prevented me from authenticating with github until I finally figured out a workaround; speed bump #1.</p>

<p>We tinkered with the API for a bit, and while the documentation didn't exactly match what the API was sending us, we were able to figure it out pretty quick.  Jared got Apache running, Devin set up the DNS (and bought a new domain name, for funsies), and I got the initial databases up and running.  Not a bad start.</p>

<p>With a general structure in place, the next step was to start polling the API and storing the results.  Perl was suggested, as were ruby, clojure, and python.  I said I'd do this part, in python (due to previous experience), and set to work.  Jared took off for a bit to run some errands, and Devin, left waiting on my work, started writing the API->DB in clojure, being the fanboy that he is.</p>

<p>The script wasn't as clean as I would have liked, because despite having a nice list of dicts to work with, I still had to quote the text being stored, and format the dates to appease the MySQL gods.  After a little bit, though, I had what looked like the correct sequence of SQL statements printing to stdout.  I changed the prints to executes, ran the script, and got . . . a whole bunch of encoding errors.  The problem involved some Unicode characters being sent back, and I figured I just had to specify UTF-8 as the encoding type and move right along.  Nope.  Not knowing about the default collation in MySQL, I suspected that might be the problem.  Nope.  Devin was still chugging away on his clojure implementation, and Jared, errands run, ended up writing a solution in perl that actually worked (eventually).  So by the afternoon we had three (mostly) working scripts that did exactly the same thing.  Efficiency!</p>

<p>With data now coming in, we realized the API made no guarantee about duplicates, so we made a few changes to uniques in the DB to prevent that from happening.  Confident that we could now slap a few data-visualization APIs on top of what we had and call it an MVP, we decided to break for dinner/loved ones.</p>

<p>We ended up meeting later that night for a bit to discuss the next morning's game plan.  We mocked up a page layout, and planned on meeting back at the hackathon at 8:30 the next day (3 hours is plenty of time to do an entire front-end, right?). I also whipped up a craptacular logo before bed.</p>

<p><strong>Sunday Morning:</strong>  I reluctantly woke up a little before 8.  I was excited to work on the front-end, sure, but there are few things I value more than sleep (probably because I get so little of it during the work week).  Arrived at the building, and was immediately thwarted by locked doors; claims that the building would open again at 8am overlooked the fact that the building was officially closed on Sundays. I didn't have the number for the room the event was using, but one of the coordinators fortuitously came down a few minutes later to let someone else in.  Phew.</p>

<p>I figured (correctly) that my teammates would be late, so set to work on writing an HTML skeleton and a basic stylesheet.  Tinkered for a little bit with color schemes and <a href="http://www.patternify.com/">Patternify</a>, an awesome CSS pattern generator that gives you the tile image's base64 encoding, so you don't even need a separate image file (pretty sweet, right? I even used it for the blog's current bg).</p>

<p>Once my teammates showed up, the next few hours were a frantic, stressed blur.  We had location data, and we had brand data.  Someone whispered "Crocs."  There it was: use our data to display statistics about Crocs purchases from Zappos.com.  A guaranteed winner; a tool everyone needed (they just didn't know it yet).</p>

<p>The night before, I'd found a Google Charts API that could color a map.  It promised it could do so given a value for each region, and a 'color gradient.'  'Awesome,' I naively thought.  'I can give it #purchases in each state, and two colors, and it'll color the states along that gradient, similar to the tagroll on delicious.'  Not so.  After a little more digging, turns out what they'd meant by 'gradient' was 'a list of hex colors, one for each region you specify you want colored.'  Hmm.  Not quite as nice as I'd envisioned, but I could still make it work; I just had to discretize the colors and the groups of states corresponding to them.  I took the simplest route; 48 states, a gradient of 6 colors, and 8 states for each color.  There'd have been more contrast (probably) on the map had I factored the range of values(#crocs orders) into the algorithm, but after adding another DB to track purchases by state, and a few more corresponding lines to the perl script, with about an hour left I was more worried about other aspects of the project.</p>

<p>While I got the map working, Devin and Jared worked on styling, layout, and other content.  Devin, much more well-versed in modern web development tools than Jared or I, added HTML Boilerplate and picked a font.  Lacking the 'what' or 'why' of Boilerplate, Jared and I left Devin to 'do his thing.'  Statistics from the DB were promptly pulled and displayed on the page (our only real content).</p>

<p>Reaching 'crunch time,' and all three of us simultaneously making changes to the repo, it was git's time to shine.  While Jared and I were new to git, both svn users in the past (Aside:  UW-CS is so focused on theory that I didn't hear the word 'version control' until my 2nd year.  None of my professors ever made any mention of development tools, save one fierce proponent of Emacs; I guess such knowledge is either assumed or ignored with a passing 'they'll figure it out later'), we still quickly realized that our setup was the definition of 'wrong:' we had no push/pull triggers, and the 'live' copy of the repo was simply one Jared had cloned into the document root.  Subsequently, for any changes we pushed, we had to say 'Jared, please do a pull on the server copy.' Not ideal, and frankly embarrassing to admit, but it's prompted me to learn how to properly use git, and is probably a bit humorous to those not directly involved.</p>

<p>We discussed making a javascript counter to keep track of time passed since our 'Croc Epoch,' and agreed it would be super simple and wouldn't even need a query; we'd just plug the time into the code itself.  Despite this, we still didn't have time to implement it, and so ended up with a (much less impressive) static time field.</p>

<p>That was it.  A few quick CSS3 features (lipstick on a corpse?) and it was noon.  Time for the presentations.</p>

<p>We were told to keep them to around 3-5 minutes, and while we were worried about actually having enough material, other groups certainly didn't have that problem; several went on for 15 or 20 minutes.  At this point we realized what we were up against:  most of the attendees were the business end of a startup, and were simply presenting ideas and mockups in the hopes of being funded.</p>

<p>So only a few groups had actually written most of their code in the past 24 hours; I think we may have been the only 'from scratch' team.  The vast majority, it seemed, were months into their projects, idea-wise if not code-wise.  Needless to say, our presentation of 'here's what we did in a few hours, on a whim' didn't exactly wow the judges, especially when compared to 'Here's this well-thought-out startup idea that, while not actually implemented yet, is still really cool and useful.'</p>

<p>Needless to say, we didn't win anything.  Though Spreenkler had been given three $500 Zappos.com gift cards, and we were one of three teams to have used their API, we did not receive a gift card.  Not that I blame Spreenkler; I understand their decision; they couldn't expect to award anything to an obviously impromptu entry without hearing endless frustrated complaints from the other entrants.  Still, I could've used some new shoes, and I do feel that we did more 'hacking' at the event than most, if not all other teams.</p>

<p>In the end, I'm not sure how to feel about the experience.  I'm happy that I went, as I learned some new tricks, got to hang out with friends and enjoyed some free food.  At the same time, I worry about the reception of our efforts.</p>

<p>My final decision to enter the hackathon was based on the idea that a late entry was better than no entry at all.  It was also made under the assumption that this was a true build-something-in-24-hours event, which it certainly was not.  I can't help but wonder if these misunderstandings caused us not to be taken seriously, or, worse yet, for Spreenkler to take offense to our well-intentioned entry.</p>

<p>If the latter is true, though, then our entry certainly did more harm than good.  I'd like to apologize to the Spreenkler team if that's the case.  If they were able to see past our hasty submission to our genuine talent, though, that's all I could have asked for.</p>

<p>P.S. I ended up implementing the aforementioned javascript counter a few days after the hackathon ended.  More for my peace of mind than anything else.  I ended up writing a short solution on my own, and then once it didn't work immediately as I'd envisioned found a library someone else had written; I thought it was a good compromise.</p>

<p>And oh, yeah, here's the (final?) product: <a href="http://crocepoch.com">CROC EPOCH</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I should probably write about something.]]></title>
    <link href="http://ryalnd.github.com/blog/2011/04/11/i-should-probably-write-about-something/"/>
    <updated>2011-04-11T06:29:26-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/04/11/i-should-probably-write-about-something</id>
    <content type="html"><![CDATA[<p>So it's been a bit since I've posted anything.  I've been pretty busy.</p>

<p>Between my new 9-5, an amazing girlfriend, the weather improving, several web projects and a few novels, my plate's been plenty full.</p>

<p>I've not gotten any new projects lately, but I've been doing a lot of small(ish) changes/fixes to those I've already got going.  I've been considering having some kind of changelog for all my stuff in general, mostly to keep track of what I'm doing on a day-to-day basis.  I've started documenting such work but have yet to figure out a good place to share that with the rest of the world (or if that's even necessary).  I mean,<em> I</em> know I'm doing the work, I just think it would be nice to let others know as well.</p>

<p>On that note, here's some general stuff I've been working on since we last talked:</p>

<ul>
<li>Added some stuff to lucy-dog.com, mostly aesthetic:

<ul>
<li>Changed title(s), metadata</li>
<li>Added a few new pictures</li>
<li>Fixed some formatting, paging issues with 'show all'</li>
</ul>
</li>
<li>Broken Spoke Updates:

<ul>
<li>Migrated existing site to new host</li>
<li>Added Events functionality to DB, front-end, admin panel</li>
<li>Added, tweaked some .js libraries for picking dates and times (related to Events)</li>
</ul>
</li>
</ul>


<p>That's all I can think of off the top of my head. I'll let you know when I get an actual changelog documented.</p>

<p>I've been reminded this last week that GoDaddy is a real pain if you don't want to use their GUIs for everything.  Allowing SSH access took around 2 days to finally get implemented, after the DNS settings were populated.  I have yet to figure out how to use mysql from a shell; no combination of usernames and passwords allows me access, although those same credentials work everywhere else.  I'm sure PHPMyAdmin is a fine tool if you like that sort of thing, but I really just want access to a mysql prompt.  Is that so much to ask, GoDaddy?</p>

<p>On a related rant I have yet to find a good emacs script for multi-mode editing (PHP, javascript, html, css in this example). I tried a few but they weren't really what I was looking for.  From what I remember (this was a few weeks back) one was very close, but its PHP-mode was all kinds of broken, to the point of unusability.  If anyone has a suggestion let me know.</p>

<p>Almost done with the bike site, with the notable exception of graphics.  I am <em>absolutely</em> not a graphic designer, much as it pains me to admit.  I've taken on a few projects now where they've handed me a logo designed by someone for use as a sticker or on a t-shirt.  That's great, but my Adobe fu isn't such that I can easily make that into a pretty, well-laid-out header graphic.  Consequently graphics are what need the most improvement on these sites.  I'm getting better with Photoshop and Illustrator every day, but at this point I'd never take on a 'design' project.  I truly appreciate nice graphics, and know what does and does not work or look good.</p>

<p>At the end of the day, though, I'm not a graphic designer.  I write code.  It's one of those things where I think, 'With some experience you can make some awesome logos!' and keep that in the back of my mind as I fumble with these design tools to produce graphics that don't quite cut it.  Maybe I'll eventually get there.  Maybe I'll just hire a graphic designer.</p>

<p>On a less technical note, I finished Infinite Jest a few weeks ago.  Initially I was upset by the ending (if one wants to call it that), but after a day or two of subconscious processing I came to the opposite conclusion: that while certain elements of the story were not explicitly explained, there were plenty of clues and allusions to allow the reader to work things out for himself.  I liked that.  Apparently DFW's last unfinished novel is out now, so I'm going to have to pick that up soon.</p>

<p>At Devin's Mad Clojure Meetup last week I was referred to Logicomix, which I shortly thereafter bought and consumed.  The idea and format were what drew me immediately in:  a story about famous logicians/mathematicians/philosophers, in graphic novel format?  What's not to like about that?  While the illustrations were amazing, I found the writing a little boring and sometimes awkwardly/ambiguously phrased.  While I understand that including in-depth details of the fields would have made the book inaccessible to a good majority of readers, that's honestly what I was expecting and was a bit disappointed in that regard.  I felt that the book was too vague to be useful as anything more than a character-driven story and general history lesson.  Maybe that's what they were going for; I just imagined that they would cater to the 'nerd' audience a bit more.</p>

<p>Still looking for a job in Milwaukee.  Further updates as events warrant.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Site, New Job]]></title>
    <link href="http://ryalnd.github.com/blog/2011/03/15/new-site-new-job/"/>
    <updated>2011-03-15T07:48:21-05:00</updated>
    <id>http://ryalnd.github.com/blog/2011/03/15/new-site-new-job</id>
    <content type="html"><![CDATA[<p>It's been a few weeks since I last posted.  Quite a bit's happened in that time.</p>

<p>To begin, I finally found a job.  Starting Wednesday I'll be working a regular 9-to-5, doing primarily technical support for pharmacy software.  While it's only a temporary position and doesn't involve much development, I'm still really looking forward to some structure and a more 'normal' circadian rhythm.  I consider myself one of those people that loves to work, and get genuine satisfaction from doing a job well.  Also, it's well-paying and I'm dead broke; that certainly doesn't hamper my anticipation.</p>

<p>I haven't done any Project Euler since I reached Level 2.  I felt it was a good stopping point for the time being, but I've definitely learned a lot from it and plan on doing a problem or two when the urge strikes; perhaps in a new language.  It's been really good for learning syntax and structure basics for Python, and at this point I feel confident that I could pretty easily solve most problems with it.  If you're looking to learn a new language, applications (in the literal sense) to math problems are in my opinion a great way to start.</p>

<p>Still working on a couple of web development contracts, both for starting businesses.  They're going well, although the biggest problem I'm having is with the level of detail to which I'm giving these sites.  I'm trying to keep things quick and simple, but jQuery and PHP make doing all these awesome things so simple that I end up spending wayyy too much time experimenting with features the client neither asked for nor particularly needs.  Giving them more than they asked for up-front isn't really a problem in itself (deleting is pretty simple), but it's becoming one given that these need to get finished post-haste since time will be sparse come tomorrow.</p>

<p>Finally, I launched a site last week called (tentatively): <a href="http://lucy-dog.com">Lucy In Hats</a>.  It started out as a joking comment about my girlfriend's dog, and within a few hours I had bought a domain name and had something up and running.  I've been making tweaks and adding features since then, but the concept's been the same since the start: people vote on pictures of an adorable mini-pug in silly hats.</p>

<p>I ended up going through with the idea because I wanted to see how much traffic I could generate to the site, under the general knowledge that people can't get enough of cute animals.  That and learning the underlying technologies needed for a relatively simple site like this were my main goals for the project. The fact I only had to spend $10 on a domain name got things off the ground right away.</p>

<p>I've done some 'advertising' on Facebook, both on my account and on the lady's; beyond that I've been relying on word-of-mouth and people's attraction to cuteness.  I'd say he site is a success even at this point, at least as compared to ry-land.com and this blog.</p>

<p>As of right now I've had around 10x as many unique visitors to the site as to ry-land.com, and about 35x as many page views.  Granted, I haven't advertised ry-land.com on Facebook, nor is there dynamic content to drive all those page views, but I'm still pretty impressed by its popularity in the first week.</p>

<p>I'm really cranking out the jQuery and PHP and doing new stuff with them every day.  I'm enjoying it, learning a bunch, and tomorrow I should even start making some money again.  Not bad.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Job, More Euler]]></title>
    <link href="http://ryalnd.github.com/blog/2011/02/05/no-job-more-euler/"/>
    <updated>2011-02-05T17:57:27-06:00</updated>
    <id>http://ryalnd.github.com/blog/2011/02/05/no-job-more-euler</id>
    <content type="html"><![CDATA[<p>Worked on problems <a href="http://projecteuler.net/index.php?section=problems&amp;id=23">23</a> and <a href="http://projecteuler.net/index.php?section=problems&amp;id=35">35</a> tonight.  Problem 23 was pretty straightforward, especially in Python:</p>

<ol>
<li><p>Define a function that finds the sum of a number's proper divisors</p></li>
<li><p>Create a list of all abundant numbers less than 28123</p></li>
<li><p>Create a <strong>set</strong> of sums resulting from the addition of each pair in the list described in 2.</p></li>
<li><p>Create a final set of numbers &lt; 28123 that are not in the set described in 3.</p></li>
</ol>


<p>The answer is the sum of that last set. Easy enough, right?  I've been using the built-in <code>set</code> structure from Python where it makes sense (where I don't want duplicates), although I've been doing so under the assumption that their duplicate handling is better-implemented than anything I would write after-the-fact.  I imagine they're just doing some checks before actually appending, but I'm curious to learn exactly how they're doing it, and if in fact I'm using set correctly in these instances.  Remind me to look that up later.</p>

<p>Figured I'd have 35 finished by the time I finished writing this, but my algorithm is apparently too naive, and requires something more than iterating through all primes under one million to find which are circular. Dang.  I'll keep working on it after this, and post about it when I'm done.</p>

<p>Did a bit of work on the main site, mostly behind the scenes.  I actually designed a few logos today, as I plan on putting a banner/header at the top in place of my little 'random statement' javascript thingy.  I'm moving toward making the front page more like the border-rounded, background-gradiented, 'look at me I'm a 2.0 designer' designs you see everywhere these days.  Not because I agree with the aesthetic, but because I want to show that I can do that, too.</p>

<p>Super Bowl tomorrow.  I honestly haven't payed very much attention this season, but having the Packers in the running always reminds me of the great Holmgren era, and thus of my childhood.  It's always fun to watch a football game with friends, especially when I'm actually invested in a team, so tomorrow should be a lot of fun.</p>

<p>Still no job, but I'm pretty much constantly in talks with recruiters.  The fact that in the past several months they've not managed to find me a job indicates that maybe they're not the best way to go, but I remain confident in my competence and have no doubt that eventually someone else will recognize it as well.</p>

<p>In the meantime I'll be calculating circular primes and learning from my mistakes.</p>

<p>Edit (12:16am):
Finished problem 35.  Pretty embarrassed about that one.  I was trying to speed up the algorithm by reducing the list of primes over which it was iterating, but wasn't having much luck, until the daily facepalm:</p>

<blockquote><p><strong>Besides 2 and 5, circular primes' digits can only be 1,3,7, or 9.</strong></p></blockquote>

<p>The number of primes under one million? About 78k.  Those that also satisfy the above condition? 2500.</p>

<p>Problem 35 down.  33 problems done, 289 to go.</p>
]]></content>
  </entry>
  
</feed>
